{"id":"main.js","dependencies":[{"name":"/Users/young/Desktop/python lesson/2024.01.24./REGEXP/package.json","includedInParent":true,"mtime":1706090646958}],"generated":{"js":"var str = \"\\n010-1234-5678.\\nthesecon@gmail.com\\nhttps://www.omdbapi.com/?apikey=7035c60c&s=frozen\\nThe quick brown fox jumps over the lazy dog.\\nabbcccdddd\\nhttp://localhost:1234\\n\\uB3D9\\uD574\\uBB3C\\uACFC \\uBC31\\uB450\\uC0B0\\uC774 \\uB9C8\\uB974\\uACE0 \\uB2F3\\uB3C4\\uB85D\";\nvar h = \"   the hello world !\\n\\n\";\n\n// const regexp = new RegExp('the','gi') // g 는 여러개 i 는 대소문자 구분 없이\n// const regexp = /the/gi\n// console.log(str.match(regexp))\n\n// const regexp = /fox/gi\n// console.log(regexp.test(str))\n// console.log(str.replace(regexp,'AAA'))\n\n// console.log(str.match(/^t/gim))\n\n// console.log(str.match(/^t/g)) \n\n// console.log(str.match(/h..p/g))\n\n// console.log(str.match(/https?/g))\n\n// console.log(str.match(/d{2,}/g))\n\n// console.log(str.match(/[fox]/g))\n\n// console.log(str.match(/[0-9]/g))\n\n// console.log(str.match(/[0-9]{1,}/g))\n\n// console.log(str.match(/[가-힣]{1,}/g)) // 띄어쓰기 기준\n\n// console.log(str.match(/\\w/g))\n\n// console.log(str.match(/\\b\\w{1,}\\b/g))\n// console.log(str.match(/\\bf\\w{1,}\\b/g)) // f로 시작\n\n// console.log(str.match(/\\d{1,}/g))\n\n// console.log(str.match(/\\s/g)) // 줄바꿈 포함\\\n\n// console.log(h.replace(/\\s/g,'')) \n\n// console.log(str.match(/.{1,}(?=@)/g))\n// console.log(str.match(/(?<=@).{1,}/g))"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":1,"column":4},"source":"main.js","original":{"line":1,"column":6},"name":"str"},{"generated":{"line":1,"column":7},"source":"main.js","original":{"line":1,"column":9}},{"generated":{"line":1,"column":269},"source":"main.js","original":{"line":8,"column":18}},{"generated":{"line":2,"column":0},"source":"main.js","original":{"line":10,"column":0}},{"generated":{"line":2,"column":4},"source":"main.js","original":{"line":10,"column":6},"name":"h"},{"generated":{"line":2,"column":5},"source":"main.js","original":{"line":10,"column":7}},{"generated":{"line":2,"column":34},"source":"main.js","original":{"line":12,"column":1}},{"generated":{"line":4,"column":0},"source":"main.js","original":{"line":14,"column":0}},{"generated":{"line":5,"column":0},"source":"main.js","original":{"line":15,"column":0}},{"generated":{"line":6,"column":0},"source":"main.js","original":{"line":16,"column":0}},{"generated":{"line":8,"column":0},"source":"main.js","original":{"line":18,"column":0}},{"generated":{"line":9,"column":0},"source":"main.js","original":{"line":19,"column":0}},{"generated":{"line":10,"column":0},"source":"main.js","original":{"line":20,"column":0}},{"generated":{"line":12,"column":0},"source":"main.js","original":{"line":22,"column":0}},{"generated":{"line":14,"column":0},"source":"main.js","original":{"line":24,"column":0}},{"generated":{"line":16,"column":0},"source":"main.js","original":{"line":26,"column":0}},{"generated":{"line":18,"column":0},"source":"main.js","original":{"line":28,"column":0}},{"generated":{"line":20,"column":0},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":22,"column":0},"source":"main.js","original":{"line":32,"column":0}},{"generated":{"line":24,"column":0},"source":"main.js","original":{"line":34,"column":0}},{"generated":{"line":26,"column":0},"source":"main.js","original":{"line":36,"column":0}},{"generated":{"line":28,"column":0},"source":"main.js","original":{"line":38,"column":0}},{"generated":{"line":30,"column":0},"source":"main.js","original":{"line":40,"column":0}},{"generated":{"line":32,"column":0},"source":"main.js","original":{"line":42,"column":0}},{"generated":{"line":33,"column":0},"source":"main.js","original":{"line":43,"column":0}},{"generated":{"line":35,"column":0},"source":"main.js","original":{"line":45,"column":0}},{"generated":{"line":37,"column":0},"source":"main.js","original":{"line":47,"column":0}},{"generated":{"line":39,"column":0},"source":"main.js","original":{"line":49,"column":0}},{"generated":{"line":41,"column":0},"source":"main.js","original":{"line":51,"column":0}},{"generated":{"line":42,"column":0},"source":"main.js","original":{"line":52,"column":0}}],"sources":{"main.js":"const str = `\n010-1234-5678.\nthesecon@gmail.com\nhttps://www.omdbapi.com/?apikey=7035c60c&s=frozen\nThe quick brown fox jumps over the lazy dog.\nabbcccdddd\nhttp://localhost:1234\n동해물과 백두산이 마르고 닳도록`\n\nconst h = `   the hello world !\n\n`\n\n// const regexp = new RegExp('the','gi') // g 는 여러개 i 는 대소문자 구분 없이\n// const regexp = /the/gi\n// console.log(str.match(regexp))\n\n// const regexp = /fox/gi\n// console.log(regexp.test(str))\n// console.log(str.replace(regexp,'AAA'))\n\n// console.log(str.match(/^t/gim))\n\n// console.log(str.match(/^t/g)) \n\n// console.log(str.match(/h..p/g))\n\n// console.log(str.match(/https?/g))\n\n// console.log(str.match(/d{2,}/g))\n\n// console.log(str.match(/[fox]/g))\n\n// console.log(str.match(/[0-9]/g))\n\n// console.log(str.match(/[0-9]{1,}/g))\n\n// console.log(str.match(/[가-힣]{1,}/g)) // 띄어쓰기 기준\n\n// console.log(str.match(/\\w/g))\n\n// console.log(str.match(/\\b\\w{1,}\\b/g))\n// console.log(str.match(/\\bf\\w{1,}\\b/g)) // f로 시작\n\n// console.log(str.match(/\\d{1,}/g))\n\n// console.log(str.match(/\\s/g)) // 줄바꿈 포함\\\n\n// console.log(h.replace(/\\s/g,'')) \n\n// console.log(str.match(/.{1,}(?=@)/g))\n// console.log(str.match(/(?<=@).{1,}/g))"},"lineCount":null}},"error":null,"hash":"c86786f57712f46bb3c2619e2119c437","cacheData":{"env":{}}}